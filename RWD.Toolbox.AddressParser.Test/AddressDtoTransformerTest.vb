Imports System.Text
Imports Microsoft.VisualStudio.TestTools.UnitTesting
Imports RWD.Toolbox.AddressParser
Imports RWD.Toolbox.AddressParser.Shared

<TestClass()> Public Class AddressTransformerTest

    Shared _factory As New Factory
    ' Private Shared _masterCodeSet As IMasterCodeSet
    Private Shared _AddressTransformer As IAddressTransformer

    Public Sub New()
        _AddressTransformer = _factory.CreateTransformer()
    End Sub

    'double spaces are on purpose for testing 
    'address dto is never nothing


    ''' <summary>
    ''' If unable to parse anything, then FullAddress is set to input
    ''' </summary>
    ''' <remarks></remarks>
    <TestMethod()>
    Public Sub Testing_Returns_FullAddress_As_Typed_If_Failed_To_Parse()
        Dim _Address As Address = _AddressTransformer.Parse("zz123456asf;ldaskjfoinlneeeDDDfsal;f2j")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("zz123456asf;ldaskjfoinlneeeDDDfsal;f2j", _Address.FullAddress, False)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Number))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Street))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Suffix))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.City))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.County))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.State))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.ZipPlus4))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Country))
    End Sub

    Private _testIgnoreCase As Boolean = True

    <TestMethod()>
    Public Sub Testing_FullAddress_Without_Punctuation()
        Dim _Address As Address = _AddressTransformer.Parse("7768 E ST Anderson  STREET ne apartment 12A PO BOX 99 warren Oh 44484-1997 usa")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("7768 E ST ANDERSON ST NE APT 12A; PO BOX 99; WARREN OH  44484-1997", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("7768", _Address.Number, _testIgnoreCase)
        Assert.AreEqual("E", _Address.PreDirectional, _testIgnoreCase)
        Assert.AreEqual("ST Anderson", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix, _testIgnoreCase)
        Assert.AreEqual("NE", _Address.PostDirectional, _testIgnoreCase)
        Assert.AreEqual("APT", _Address.SecondaryUnit, _testIgnoreCase)
        Assert.AreEqual("12A", _Address.SecondaryNumber, _testIgnoreCase)
        Assert.AreEqual("99", _Address.POBoxNumber, _testIgnoreCase)
        Assert.AreEqual("WARREN", _Address.City, _testIgnoreCase)
        Assert.AreEqual("TRUMBULL", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44484-1997", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_FullAddress_With_Punctuation()
        Dim _Address As Address = _AddressTransformer.Parse("7768 E. Anderson  Avenue n.e. apartment A2 P.O. BOX 99 warren, Oh. 44484-1997 u.s.a.")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("7768 E ANDERSON AVE NE APT A2; PO BOX 99; WARREN OH  44484-1997", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("7768", _Address.Number, _testIgnoreCase)
        Assert.AreEqual("E", _Address.PreDirectional, _testIgnoreCase)
        Assert.AreEqual("ANDERSON", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("AVE", _Address.Suffix, _testIgnoreCase)
        Assert.AreEqual("NE", _Address.PostDirectional, _testIgnoreCase)
        Assert.AreEqual("APT", _Address.SecondaryUnit, _testIgnoreCase)
        Assert.AreEqual("A2", _Address.SecondaryNumber, _testIgnoreCase)
        Assert.AreEqual("99", _Address.POBoxNumber, _testIgnoreCase)
        Assert.AreEqual("WARREN", _Address.City, _testIgnoreCase)
        Assert.AreEqual("TRUMBULL", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44484-1997", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)

    End Sub

    <TestMethod()>
    Public Sub Testing_FullAddress_With_Punctuation_With_Whitespace()
        Dim _Address As Address = _AddressTransformer.Parse("  7768 E. Anderson  Avenue n.e. apartment 2 P.O. BOX 99 warren, Oh. 44484-1997 u.s.a.  ")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("7768 E ANDERSON AVE NE APT 2; PO BOX 99; WARREN OH  44484-1997", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("7768", _Address.Number, _testIgnoreCase)
        Assert.AreEqual("E", _Address.PreDirectional, _testIgnoreCase)
        Assert.AreEqual("ANDERSON", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("AVE", _Address.Suffix, _testIgnoreCase)
        Assert.AreEqual("NE", _Address.PostDirectional, _testIgnoreCase)
        Assert.AreEqual("APT", _Address.SecondaryUnit, _testIgnoreCase)
        Assert.AreEqual("2", _Address.SecondaryNumber, _testIgnoreCase)
        Assert.AreEqual("99", _Address.POBoxNumber, _testIgnoreCase)
        Assert.AreEqual("WARREN", _Address.City, _testIgnoreCase)
        Assert.AreEqual("TRUMBULL", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44484-1997", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_Typical_Address_Without_Punctuation()
        Dim _Address As Address = _AddressTransformer.Parse("1005 N Gravenstein Highway Sebastopol CA 95472")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("1005 N GRAVENSTEIN HWY; SEBASTOPOL CA  95472", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("1005", _Address.Number, _testIgnoreCase)
        Assert.AreEqual("N", _Address.PreDirectional, _testIgnoreCase)
        Assert.AreEqual("GRAVENSTEIN", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("HWY", _Address.Suffix, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("SEBASTOPOL", _Address.City, _testIgnoreCase)
        Assert.AreEqual("SONOMA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("CA", _Address.State, _testIgnoreCase)
        Assert.AreEqual("95472", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_Typical_Address_With_Punctuation()
        Dim _Address As Address = _AddressTransformer.Parse("1005 N. Gravenstein Highway, Sebastopol, CA. 95472")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("1005 N GRAVENSTEIN HWY; SEBASTOPOL CA  95472", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("1005", _Address.Number, _testIgnoreCase)
        Assert.AreEqual("N", _Address.PreDirectional, _testIgnoreCase)
        Assert.AreEqual("GRAVENSTEIN", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("HWY", _Address.Suffix, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("SEBASTOPOL", _Address.City, _testIgnoreCase)
        Assert.AreEqual("SONOMA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("CA", _Address.State, _testIgnoreCase)
        Assert.AreEqual("95472", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_Typical_Address_With_Punctuation_NoZip()
        Dim _Address As Address = _AddressTransformer.Parse("1005 N. Gravenstein Highway, Sebastopol, CA.")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("1005 N GRAVENSTEIN HWY; SEBASTOPOL CA  95472", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("1005", _Address.Number, _testIgnoreCase)
        Assert.AreEqual("N", _Address.PreDirectional, _testIgnoreCase)
        Assert.AreEqual("GRAVENSTEIN", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("HWY", _Address.Suffix, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("SEBASTOPOL", _Address.City, _testIgnoreCase)
        Assert.AreEqual("SONOMA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("CA", _Address.State, _testIgnoreCase)
        Assert.AreEqual("95472", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_Address_WithRangeless_SecondaryUnit()
        Dim _Address As Address = _AddressTransformer.Parse("1050 Broadway Penthouse, New York, NY 10001")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("1050 BROADWAY PH; NEW YORK NY  10001", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("1050", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("BROADWAY", _Address.Street, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Suffix))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.AreEqual("PH", _Address.SecondaryUnit, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("NEW YORK", _Address.City, _testIgnoreCase)
        Assert.AreEqual("NEW YORK", _Address.County, _testIgnoreCase)
        Assert.AreEqual("NY", _Address.State, _testIgnoreCase)
        Assert.AreEqual("10001", _Address.ZipPlus4)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)

    End Sub

    <TestMethod()>
    Public Sub Testing_Address_WithSpaced_Alphanumeric_Range()
        Dim _Address As Address = _AddressTransformer.Parse("N645 W23001 BLUEMOUND ROAD, ARLINGTON HEIGHTS, IL, 60006")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("N645W23001 BLUEMOUND RD; ARLINGTON HEIGHTS IL  60006", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("N645W23001", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("BLUEMOUND", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("RD", _Address.Suffix)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("ARLINGTON HEIGHTS", _Address.City, _testIgnoreCase)
        Assert.AreEqual("Cook", _Address.County, _testIgnoreCase)
        Assert.AreEqual("IL", _Address.State, _testIgnoreCase)
        Assert.AreEqual("60006", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_Queens_NY_Address()
        Dim _Address As Address = _AddressTransformer.Parse("123-465 34th St New York NY 10024")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123-465 34TH ST; NEW YORK NY  10024", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123-465", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("34TH", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("NEW YORK", _Address.City, _testIgnoreCase)
        Assert.AreEqual("NEW YORK", _Address.County, _testIgnoreCase)
        Assert.AreEqual("NY", _Address.State, _testIgnoreCase)
        Assert.AreEqual("10024", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_With_Cardinal_Street_1()
        Dim _Address As Address = _AddressTransformer.Parse("500 SOUTH STREET SE VIRGINIA BEACH VIRGINIA 23452")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("500 SOUTH ST SE; VIRGINIA BEACH VA  23452", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("500", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("SOUTH", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix)
        Assert.AreEqual("SE", _Address.PostDirectional, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("VIRGINIA BEACH", _Address.City, _testIgnoreCase)
        Assert.AreEqual("VIRGINIA BEACH CITY", _Address.County, _testIgnoreCase)
        Assert.AreEqual("VA", _Address.State, _testIgnoreCase)
        Assert.AreEqual("23452", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_With_Cardinal_Street_2()
        Dim _Address As Address = _AddressTransformer.Parse("500 SOUTH STREET SE PENTHOUSE, VIRGINIA BEACH VIRGINIA 23452")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("500 SOUTH ST SE PH; VIRGINIA BEACH VA  23452", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("500", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("SOUTH", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix)
        Assert.AreEqual("SE", _Address.PostDirectional, _testIgnoreCase)
        Assert.AreEqual("PH", _Address.SecondaryUnit, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("VIRGINIA BEACH", _Address.City, _testIgnoreCase)
        Assert.AreEqual("VIRGINIA BEACH CITY", _Address.County, _testIgnoreCase)
        Assert.AreEqual("VA", _Address.State, _testIgnoreCase)
        Assert.AreEqual("23452", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_With_Cardinal_Street_3()
        Dim _Address As Address = _AddressTransformer.Parse("500 SOUTH STREET SE PENTHOUSE 5 VIRGINIA BEACH VIRGINIA 23452")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("500 SOUTH ST SE PH 5; VIRGINIA BEACH VA  23452", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("500", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("SOUTH", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix)
        Assert.AreEqual("SE", _Address.PostDirectional, _testIgnoreCase)
        Assert.AreEqual("PH", _Address.SecondaryUnit, _testIgnoreCase)
        Assert.AreEqual("5", _Address.SecondaryNumber, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("VIRGINIA BEACH", _Address.City, _testIgnoreCase)
        Assert.AreEqual("VIRGINIA BEACH CITY", _Address.County, _testIgnoreCase)
        Assert.AreEqual("VA", _Address.State, _testIgnoreCase)
        Assert.AreEqual("23452", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_With_Cardinal_Street_4()
        Dim _Address As Address = _AddressTransformer.Parse("500 SOUTH STREET PENTHOUSE, VIRGINIA BEACH VIRGINIA 23452")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("500 SOUTH ST PH; VIRGINIA BEACH VA  23452", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("500", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("SOUTH", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.AreEqual("PH", _Address.SecondaryUnit, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("VIRGINIA BEACH", _Address.City, _testIgnoreCase)
        Assert.AreEqual("VIRGINIA BEACH CITY", _Address.County, _testIgnoreCase)
        Assert.AreEqual("VA", _Address.State, _testIgnoreCase)
        Assert.AreEqual("23452", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_With_Cardinal_Street_5()
        Dim _Address As Address = _AddressTransformer.Parse("500 SOUTH STREET PENTHOUSE 5 VIRGINIA BEACH VIRGINIA 23452")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("500 SOUTH ST PH 5; VIRGINIA BEACH VA  23452", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("500", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("SOUTH", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.AreEqual("PH", _Address.SecondaryUnit, _testIgnoreCase)
        Assert.AreEqual("5", _Address.SecondaryNumber, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("VIRGINIA BEACH", _Address.City, _testIgnoreCase)
        Assert.AreEqual("VIRGINIA BEACH CITY", _Address.County, _testIgnoreCase)
        Assert.AreEqual("VA", _Address.State, _testIgnoreCase)
        Assert.AreEqual("23452", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_NumberFraction_Street_SuffixAbrv_City_StateAbrv_Zip_Without_Delimiters()
        Dim _Address As Address = _AddressTransformer.Parse("123 1/2 MAIN ST RICHMOND VA 23221")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 1/2 MAIN ST; RICHMOND VA  23221", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123 1/2", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("MAIN", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("RICHMOND", _Address.City, _testIgnoreCase)
        Assert.AreEqual("RICHMOND CITY", _Address.County, _testIgnoreCase)
        Assert.AreEqual("VA", _Address.State, _testIgnoreCase)
        Assert.AreEqual("23221", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_Full_Address_Without_Punctuation()
        Dim _Address As Address = _AddressTransformer.Parse("999 West 89th Street Apt A New York NY 10024")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("999 W 89TH ST APT A; NEW YORK NY  10024", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("999", _Address.Number, _testIgnoreCase)
        Assert.AreEqual("W", _Address.PreDirectional, _testIgnoreCase)
        Assert.AreEqual("89TH", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.AreEqual("APT", _Address.SecondaryUnit, _testIgnoreCase)
        Assert.AreEqual("A", _Address.SecondaryNumber, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("NEW YORK", _Address.City, _testIgnoreCase)
        Assert.AreEqual("NEW YORK", _Address.County, _testIgnoreCase)
        Assert.AreEqual("NY", _Address.State, _testIgnoreCase)
        Assert.AreEqual("10024", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_Address_With_Alphanumeric_House_Number()
        Dim _Address As Address = _AddressTransformer.Parse("N6W23001 BLUEMOUND ROAD, ARLINGTON HEIGHTS, IL, 60006")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("N6W23001 BLUEMOUND RD; ARLINGTON HEIGHTS IL  60006", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("N6W23001", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("BLUEMOUND", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("RD", _Address.Suffix)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("ARLINGTON HEIGHTS", _Address.City, _testIgnoreCase)
        Assert.AreEqual("Cook", _Address.County, _testIgnoreCase)
        Assert.AreEqual("IL", _Address.State, _testIgnoreCase)
        Assert.AreEqual("60006", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_Number_Street_SuffixAbrv_City_StateAbrv_Zip4_Country_With_Delimiters()
        Dim _Address As Address = _AddressTransformer.Parse("123 MAIN ST; JEFFERSON OH 44047-1447; UNITED STATES")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 MAIN ST; JEFFERSON OH  44047-1447", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("MAIN", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047-1447", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)

    End Sub

    <TestMethod()>
    Public Sub Testing_Number_Street_SuffixAbrv_City_StateAbrv_Zip4_US_With_Delimiters()
        Dim _Address As Address = _AddressTransformer.Parse("123 MAIN ST; JEFFERSON OH 44047-1447; US")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 MAIN ST; JEFFERSON OH  44047-1447", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("MAIN", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047-1447", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_Number_Street_SuffixAbrv_City_StateAbrv_Zip4_USA_With_Delimiters()
        Dim _Address As Address = _AddressTransformer.Parse("123 MAIN ST; JEFFERSON OH 44047-1447; USA")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 MAIN ST; JEFFERSON OH  44047-1447", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("MAIN", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047-1447", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_Number_Street_SuffixAbrv_City_StateAbrv_Zip4_Country_Without_Delimiters()
        Dim _Address As Address = _AddressTransformer.Parse("123 MAIN ST JEFFERSON OH 44047-1447 UNITED STATES")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 MAIN ST; JEFFERSON OH  44047-1447", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("MAIN", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047-1447", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_Number_Street_SuffixAbrv_City_StateAbrv_Zip4_US_Without_Delimiters()
        Dim _Address As Address = _AddressTransformer.Parse("123 MAIN ST JEFFERSON OH 44047-1447 US")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 MAIN ST; JEFFERSON OH  44047-1447", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("MAIN", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047-1447", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_Number_Street_SuffixAbrv_City_StateAbrv_Zip4_UpperCase_With_Delimiters()
        Dim _Address As Address = _AddressTransformer.Parse("123 MAIN ST; JEFFERSON OH 44047-1447")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 MAIN ST; JEFFERSON OH  44047-1447", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("MAIN", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047-1447", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_Number_Street_SuffixAbrv_City_StateAbrv_Zip4_LowerCase_With_Delimiters()
        Dim _Address As Address = _AddressTransformer.Parse("123 main st; jefferson oh 44047-1447")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 MAIN ST; JEFFERSON OH  44047-1447", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("MAIN", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047-1447", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_Number_Street_SuffixAbrv_City_StateAbrv_Zip4_Without_Delimiters()
        Dim _Address As Address = _AddressTransformer.Parse("123 MAIN ST JEFFERSON OH 44047-1447")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 MAIN ST; JEFFERSON OH  44047-1447", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("MAIN", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047-1447", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_Number_Street_City_StateAbrv_Zip4_With_Delimiters()
        Dim _Address As Address = _AddressTransformer.Parse("123 MAIN; JEFFERSON OH 44047-1447")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 MAIN; JEFFERSON OH  44047-1447", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("MAIN", _Address.Street, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Suffix))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047-1447", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)

    End Sub

    <TestMethod()>
    Public Sub Testing_Number_Street_STREET_City_StateAbrv_Zip_With_Delimiters()
        Dim _Address As Address = _AddressTransformer.Parse("123 MAIN STREET; JEFFERSON OH 44047")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 MAIN ST; JEFFERSON OH  44047", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("MAIN", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_Number_Street_STREET_City_StateAbrv_Zip_Without_Delimiters()
        Dim _Address As Address = _AddressTransformer.Parse("123 MAIN STREET JEFFERSON OH 44047")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 MAIN ST; JEFFERSON OH  44047", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("MAIN", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)

    End Sub

    <TestMethod()>
    Public Sub Testing_Number_Street_STR_City_StateAbrv_Zip_With_Delimiters()
        Dim _Address As Address = _AddressTransformer.Parse("123 MAIN STR; JEFFERSON OH 44047")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 MAIN ST; JEFFERSON OH  44047", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("MAIN", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_Number_Street_STR_City_StateAbrv_Zip_Without_Delimiters()
        Dim _Address As Address = _AddressTransformer.Parse("123 MAIN STR JEFFERSON OH 44047")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 MAIN ST; JEFFERSON OH  44047", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("MAIN", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_Number_Street_ST_City_StateAbrv_Zip_With_Delimiters()
        Dim _Address As Address = _AddressTransformer.Parse("123 MAIN ST; JEFFERSON OH 44047")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 MAIN ST; JEFFERSON OH  44047", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("MAIN", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_Number_Street_ST_City_StateAbrv_Zip_Without_Delimiters()
        Dim _Address As Address = _AddressTransformer.Parse("123 MAIN ST JEFFERSON OH 44047")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 MAIN ST; JEFFERSON OH  44047", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("MAIN", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_Number_Street_ST_City_State_Zip_With_Delimiters()
        Dim _Address As Address = _AddressTransformer.Parse("123 MAIN ST; JEFFERSON OHIO 44047")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 MAIN ST; JEFFERSON OH  44047", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("MAIN", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_Street_SuffixAbrv_City_StateAbrv_Zip_With_Delimiters()
        Dim _Address As Address = _AddressTransformer.Parse("MAIN ST; JEFFERSON OH 44047")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("MAIN ST; JEFFERSON OH  44047", _Address.FullAddress, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Number))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("MAIN", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_Street_SuffixAbrv_City_StateAbrv_Zip_Without_Delimiters()
        Dim _Address As Address = _AddressTransformer.Parse("MAIN ST JEFFERSON OH 44047")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("MAIN ST; JEFFERSON OH  44047", _Address.FullAddress, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Number))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("MAIN", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_Number_Street_SuffixAbrv_City_StateAbrv_With_Delimiters()
        Dim _Address As Address = _AddressTransformer.Parse("123 MAIN ST; JEFFERSON OH")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 MAIN ST; JEFFERSON OH  44047", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("MAIN", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_Number_Street_SuffixAbrv_City_StateAbrv_Without_Delimiters()
        Dim _Address As Address = _AddressTransformer.Parse("123 MAIN ST JEFFERSON OH")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 MAIN ST; JEFFERSON OH  44047", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("MAIN", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_Number_PreDirectAbrv_Street_SuffixAbrv_PostDirectAbrv_City_StateAbrv_Zip_With_Delimiters_LowerCase()
        Dim _Address As Address = _AddressTransformer.Parse("123 e main st s; jefferson oh 44047")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 E MAIN ST S; JEFFERSON OH  44047", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.AreEqual("E", _Address.PreDirectional, _testIgnoreCase)
        Assert.AreEqual("MAIN", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix, _testIgnoreCase)
        Assert.AreEqual("S", _Address.PostDirectional, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_Number_PreDirectAbrv_Street_SuffixAbrv_PostDirectAbrv_City_StateAbrv_Zip_Without_Delimiters()
        Dim _Address As Address = _AddressTransformer.Parse("123 E MAIN ST S JEFFERSON OH 44047")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 E MAIN ST S; JEFFERSON OH  44047", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.AreEqual("E", _Address.PreDirectional, _testIgnoreCase)
        Assert.AreEqual("MAIN", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix, _testIgnoreCase)
        Assert.AreEqual("S", _Address.PostDirectional, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_Number_PreDirectAbrv_Street_SuffixAbrv_PostDirectAbrv_City_StateAbrv_Without_Delimiters()
        Dim _Address As Address = _AddressTransformer.Parse("123 E MAIN ST S JEFFERSON OH")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 E MAIN ST S; JEFFERSON OH  44047", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.AreEqual("E", _Address.PreDirectional, _testIgnoreCase)
        Assert.AreEqual("MAIN", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix, _testIgnoreCase)
        Assert.AreEqual("S", _Address.PostDirectional, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_PreDirectAbrv_Street_SuffixAbrv_PostDirectAbrv_City_StateAbrv_Zip_With_Delimiters()
        Dim _Address As Address = _AddressTransformer.Parse("E MAIN ST S; JEFFERSON, OH 44047")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("E MAIN ST S; JEFFERSON OH  44047", _Address.FullAddress, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Number))
        Assert.AreEqual("E", _Address.PreDirectional, _testIgnoreCase)
        Assert.AreEqual("MAIN", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix, _testIgnoreCase)
        Assert.AreEqual("S", _Address.PostDirectional, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_PreDirectAbrv_Street_SuffixAbrv_PostDirectAbrv_City_StateAbrv_Zip_Without_Delimiters()
        Dim _Address As Address = _AddressTransformer.Parse("E MAIN ST S JEFFERSON OH 44047")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("E MAIN ST S; JEFFERSON OH  44047", _Address.FullAddress, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Number))
        Assert.AreEqual("E", _Address.PreDirectional, _testIgnoreCase)
        Assert.AreEqual("MAIN", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix, _testIgnoreCase)
        Assert.AreEqual("S", _Address.PostDirectional, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_Number_PreDirectAbrv_Street_PostDirectAbrv_City_StateAbrv_Zip_With_Delimiters()
        Dim _Address As Address = _AddressTransformer.Parse("123 E MAIN S; JEFFERSON, OH 44047")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 E MAIN S; JEFFERSON OH  44047", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.AreEqual("E", _Address.PreDirectional, _testIgnoreCase)
        Assert.AreEqual("MAIN", _Address.Street, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Suffix))
        Assert.AreEqual("S", _Address.PostDirectional, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_Number_PreDirectAbrv_Street_SuffixAbrv_PostDirectAbrv_City_StateAbrv_Zip_With_Delimiters_With_Punctuation()
        Dim _Address As Address = _AddressTransformer.Parse("123 N.W. MAIN ST S.W.; JEFFERSON OH 44047")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 NW MAIN ST SW; JEFFERSON OH  44047", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.AreEqual("NW", _Address.PreDirectional, _testIgnoreCase)
        Assert.AreEqual("MAIN", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix, _testIgnoreCase)
        Assert.AreEqual("SW", _Address.PostDirectional, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_Number_PreDirectAbrv_StreetMultiName_SuffixAbrv_PostDirectAbrv_City_StateAbrv_Zip_With_Delimiters()
        Dim _Address As Address = _AddressTransformer.Parse("123 E MARTIN LUTHER KING JR AVE S; JEFFERSON OH 44047")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 E MARTIN LUTHER KING JR AVE S; JEFFERSON OH  44047", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.AreEqual("E", _Address.PreDirectional, _testIgnoreCase)
        Assert.AreEqual("MARTIN LUTHER KING JR", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("AVE", _Address.Suffix, _testIgnoreCase)
        Assert.AreEqual("S", _Address.PostDirectional, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_Number_PreDirectAbrv_StreetMultiName_SuffixAbrv_PostDirectAbrv_City_StateAbrv_Zip_Without_Delimiters()
        Dim _Address As Address = _AddressTransformer.Parse("123 E MARTIN LUTHER KING JR AVE S JEFFERSON OH 44047")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 E MARTIN LUTHER KING JR AVE S; JEFFERSON OH  44047", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.AreEqual("E", _Address.PreDirectional, _testIgnoreCase)
        Assert.AreEqual("MARTIN LUTHER KING JR", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("AVE", _Address.Suffix, _testIgnoreCase)
        Assert.AreEqual("S", _Address.PostDirectional, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_PreDirectAbrv_StreetMultiName_SuffixAbrv_PostDirectAbrv_City_StateAbrv_Zip_With_Delimiters()
        Dim _Address As Address = _AddressTransformer.Parse("E MARTIN LUTHER KING JR AVE S; JEFFERSON OH 44047")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("E MARTIN LUTHER KING JR AVE S; JEFFERSON OH  44047", _Address.FullAddress, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Number))
        Assert.AreEqual("E", _Address.PreDirectional, _testIgnoreCase)
        Assert.AreEqual("MARTIN LUTHER KING JR", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("AVE", _Address.Suffix, _testIgnoreCase)
        Assert.AreEqual("S", _Address.PostDirectional, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_PreDirectAbrv_StreetMultiName_SuffixAbrv_PostDirectAbrv_City_StateAbrv_Zip_Without_Delimiters()
        Dim _Address As Address = _AddressTransformer.Parse("E MARTIN LUTHER KING JR AVE S JEFFERSON OH 44047")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("E MARTIN LUTHER KING JR AVE S; JEFFERSON OH  44047", _Address.FullAddress, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Number))
        Assert.AreEqual("E", _Address.PreDirectional, _testIgnoreCase)
        Assert.AreEqual("MARTIN LUTHER KING JR", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("AVE", _Address.Suffix, _testIgnoreCase)
        Assert.AreEqual("S", _Address.PostDirectional, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_Number_PreDirectAbrv_StreetMultiName_PostDirectAbrv_City_StateAbrv_Zip_With_Delimiters()
        Dim _Address As Address = _AddressTransformer.Parse("123 E MARTIN LUTHER KING JR S; JEFFERSON OH 44047")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 E MARTIN LUTHER KING JR S; JEFFERSON OH  44047", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.AreEqual("E", _Address.PreDirectional, _testIgnoreCase)
        Assert.AreEqual("MARTIN LUTHER KING JR", _Address.Street, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Suffix))
        Assert.AreEqual("S", _Address.PostDirectional, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_Number_PreDirectAbrv_StreetMultiName_PostDirectAbrv_City_StateAbrv_Zip_Without_Delimiters()
        Dim _Address As Address = _AddressTransformer.Parse("123 E MARTIN LUTHER KING JR S JEFFERSON OH 44047")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 E MARTIN LUTHER KING JR S; JEFFERSON OH  44047", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.AreEqual("E", _Address.PreDirectional, _testIgnoreCase)
        Assert.AreEqual("MARTIN LUTHER KING JR", _Address.Street, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Suffix))
        Assert.AreEqual("S", _Address.PostDirectional, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_Number_PreDirect_StreetMultiName_Suffix_PostDirect_City_StateAbrv_Zip_With_Delimiters()
        Dim _Address As Address = _AddressTransformer.Parse("123 EAST MARTIN LUTHER KING JR AVENUE SOUTH; JEFFERSON OH 44047")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 E MARTIN LUTHER KING JR AVE S; JEFFERSON OH  44047", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.AreEqual("E", _Address.PreDirectional, _testIgnoreCase)
        Assert.AreEqual("MARTIN LUTHER KING JR", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("AVE", _Address.Suffix, _testIgnoreCase)
        Assert.AreEqual("S", _Address.PostDirectional, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_Number_PreDirect_StreetMultiName_Suffix_PostDirect_City_StateAbrv_Zip_Without_Delimiters()
        Dim _Address As Address = _AddressTransformer.Parse("123 EAST MARTIN LUTHER KING JR AVENUE SOUTH JEFFERSON OH 44047")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 E MARTIN LUTHER KING JR AVE S; JEFFERSON OH  44047", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.AreEqual("E", _Address.PreDirectional, _testIgnoreCase)
        Assert.AreEqual("MARTIN LUTHER KING JR", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("AVE", _Address.Suffix, _testIgnoreCase)
        Assert.AreEqual("S", _Address.PostDirectional, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_Number_StreetMultiName_SuffixAbrv_City_StateAbrv_Zip_With_Delimiters()
        Dim _Address As Address = _AddressTransformer.Parse("123 MARTIN LUTHER KING JR AVE; JEFFERSON OH 44047")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 MARTIN LUTHER KING JR AVE; JEFFERSON OH  44047", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.AreEqual("MARTIN LUTHER KING JR", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("AVE", _Address.Suffix, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_Number_StreetMultiName_SuffixAbrv_City_StateAbrv_Zip_Without_Delimiters()
        Dim _Address As Address = _AddressTransformer.Parse("123 MARTIN LUTHER KING JR AVE JEFFERSON OH 44047")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 MARTIN LUTHER KING JR AVE; JEFFERSON OH  44047", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.AreEqual("MARTIN LUTHER KING JR", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("AVE", _Address.Suffix, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_Number_StreetMultiName_City_StateAbrv_Zip_With_Delimiters()
        Dim _Address As Address = _AddressTransformer.Parse("123 MARTIN LUTHER KING JR; JEFFERSON OH 44047")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 MARTIN LUTHER KING JR; JEFFERSON OH  44047", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.AreEqual("MARTIN LUTHER KING JR", _Address.Street, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Suffix))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_Number_StreetMultiName_Suffix_City_StateAbrv_Zip_With_Delimiters()
        Dim _Address As Address = _AddressTransformer.Parse("123 MARTIN LUTHER KING JR AVENUE; JEFFERSON OH 44047")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 MARTIN LUTHER KING JR AVE; JEFFERSON OH  44047", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.AreEqual("MARTIN LUTHER KING JR", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("AVE", _Address.Suffix, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_Number_StreetMultiName_Suffix_City_StateAbrv_Zip_Without_Delimiters()
        Dim _Address As Address = _AddressTransformer.Parse("123 MARTIN LUTHER KING JR AVENUE JEFFERSON OH 44047")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 MARTIN LUTHER KING JR AVE; JEFFERSON OH  44047", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.AreEqual("MARTIN LUTHER KING JR", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("AVE", _Address.Suffix, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_StreetMultiName_SuffixAbrv_City_StateAbrv_Zip_With_Delimiters()
        Dim _Address As Address = _AddressTransformer.Parse("MARTIN LUTHER KING JR AVE; JEFFERSON OH 44047")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("MARTIN LUTHER KING JR AVE; JEFFERSON OH  44047", _Address.FullAddress, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Number))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.AreEqual("MARTIN LUTHER KING JR", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("AVE", _Address.Suffix, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_StreetMultiName_SuffixAbrv_City_StateAbrv_Zip_Without_Delimiters()
        Dim _Address As Address = _AddressTransformer.Parse("MARTIN LUTHER KING JR AVE JEFFERSON OH 44047")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("MARTIN LUTHER KING JR AVE; JEFFERSON OH  44047", _Address.FullAddress, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Number))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.AreEqual("MARTIN LUTHER KING JR", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("AVE", _Address.Suffix, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_Military_Address_1()
        Dim _Address As Address = _AddressTransformer.Parse("PSC BOX 453, APO AE 99969")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("PSC BOX 453; APO AE  99969", _Address.FullAddress, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Number))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("PSC BOX 453", _Address.Street, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Suffix))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("APO", _Address.City, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.County))
        Assert.AreEqual("AE", _Address.State, _testIgnoreCase)
        Assert.AreEqual("99969", _Address.ZipPlus4)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Country))
    End Sub

    <TestMethod()>
    Public Sub Testing_Military_Address_2()
        Dim _Address As Address = _AddressTransformer.Parse("PSC 4 BOX 123; APO AE 09021")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("PSC 4 BOX 123; APO AE  09021", _Address.FullAddress, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Number))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("PSC 4 BOX 123", _Address.Street, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Suffix))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("APO", _Address.City, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.County))
        Assert.AreEqual("AE", _Address.State, _testIgnoreCase)
        Assert.AreEqual("09021", _Address.ZipPlus4)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Country))
    End Sub

    <TestMethod()>
    Public Sub Testing_Military_Address_3()
        Dim _Address As Address = _AddressTransformer.Parse("UNIT 123 BOX 456; FPO AP 096691")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("UNIT 123 BOX 456; FPO AP  096691", _Address.FullAddress, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Number))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("UNIT 123 BOX 456", _Address.Street, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Suffix))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("FPO", _Address.City, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.County))
        Assert.AreEqual("AP", _Address.State, _testIgnoreCase)
        Assert.AreEqual("096691", _Address.ZipPlus4)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Country))
    End Sub

    <TestMethod()>
    Public Sub Testing_Military_Address_4()
        Dim _Address As Address = _AddressTransformer.Parse("UNIT 123 BOX 456; DPO AE 09498-0048")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("UNIT 123 BOX 456; DPO AE  09498-0048", _Address.FullAddress, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Number))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("UNIT 123 BOX 456", _Address.Street, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Suffix))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("DPO", _Address.City, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.County))
        Assert.AreEqual("AE", _Address.State, _testIgnoreCase)
        Assert.AreEqual("09498-0048", _Address.ZipPlus4)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Country))
    End Sub

    <TestMethod()>
    Public Sub Testing_POBox_City_StateAbrv_Zip_With_Punctuation()
        Dim _Address As Address = _AddressTransformer.Parse("P.O. BOX 4857, New York, NY 10001")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("PO BOX 4857; New York NY  10001", _Address.FullAddress, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Number))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Street))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Suffix))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.AreEqual("4857", _Address.POBoxNumber, _testIgnoreCase)
        Assert.AreEqual("NEW YORK", _Address.City, _testIgnoreCase)
        Assert.AreEqual("NEW YORK", _Address.County, _testIgnoreCase)
        Assert.AreEqual("NY", _Address.State, _testIgnoreCase)
        Assert.AreEqual("10001", _Address.ZipPlus4)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_POBox_City_StateAbrv_Zip_Without_Punctuation()
        Dim _Address As Address = _AddressTransformer.Parse("P.O. BOX 4857 New York NY 10001")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("PO BOX 4857; New York NY  10001", _Address.FullAddress, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Number))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Street))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Suffix))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.AreEqual("4857", _Address.POBoxNumber, _testIgnoreCase)
        Assert.AreEqual("NEW YORK", _Address.City, _testIgnoreCase)
        Assert.AreEqual("NEW YORK", _Address.County, _testIgnoreCase)
        Assert.AreEqual("NY", _Address.State, _testIgnoreCase)
        Assert.AreEqual("10001", _Address.ZipPlus4)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_POBox_City_StateAbrv_Zip_With_Delimiters_With_Comma()
        Dim _Address As Address = _AddressTransformer.Parse("PO BOX 456; JEFFERSON, OH 44047")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("PO BOX 456; JEFFERSON OH  44047", _Address.FullAddress, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Number))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Street))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Suffix))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.AreEqual("456", _Address.POBoxNumber, _testIgnoreCase)
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047", _Address.ZipPlus4)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_POBox_City_StateAbrv_Zip_With_Delimiters_Without_Punctuation()
        Dim _Address As Address = _AddressTransformer.Parse("PO BOX 456; JEFFERSON OH 44047")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("PO BOX 456; JEFFERSON OH  44047", _Address.FullAddress, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Number))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Street))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Suffix))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.AreEqual("456", _Address.POBoxNumber, _testIgnoreCase)
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047", _Address.ZipPlus4)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_POBox_City_StateAbrv_Zip_With_Delimiters_Without_Punctuation_LoweCase()
        Dim _Address As Address = _AddressTransformer.Parse("po box 456; jefferson oh 44047")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("PO BOX 456; JEFFERSON OH  44047", _Address.FullAddress, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Number))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Street))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Suffix))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.AreEqual("456", _Address.POBoxNumber, _testIgnoreCase)
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047", _Address.ZipPlus4)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_POBox_City_StateAbrv_Zip_Without_Delimiters_With_Punctuation()
        Dim _Address As Address = _AddressTransformer.Parse("P.O. BOX 456 JEFFERSON OH 44047")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("PO BOX 456; JEFFERSON OH  44047", _Address.FullAddress, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Number))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Street))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Suffix))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.AreEqual("456", _Address.POBoxNumber, _testIgnoreCase)
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047", _Address.ZipPlus4)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_POBox_City_StateAbrv_Zip_Without_Delimiters()
        Dim _Address As Address = _AddressTransformer.Parse("PO BOX 456 JEFFERSON OH 44047")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("PO BOX 456; JEFFERSON OH  44047", _Address.FullAddress, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Number))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Street))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Suffix))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.AreEqual("456", _Address.POBoxNumber, _testIgnoreCase)
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047", _Address.ZipPlus4)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_POBox_City_StateAbrv_Zip_With_Delimiters_With_Punctuation()
        Dim _Address As Address = _AddressTransformer.Parse("P.O. BOX 456; JEFFERSON OH 44047")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("PO BOX 456; JEFFERSON OH  44047", _Address.FullAddress, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Number))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Street))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Suffix))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.AreEqual("456", _Address.POBoxNumber, _testIgnoreCase)
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047", _Address.ZipPlus4)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_POBoxPound_City_StateAbrv_Zip_With_Delimiters()
        Dim _Address As Address = _AddressTransformer.Parse("PO BOX #456; JEFFERSON OH 44047")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("PO BOX 456; JEFFERSON OH  44047", _Address.FullAddress, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Number))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Street))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Suffix))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.AreEqual("456", _Address.POBoxNumber, _testIgnoreCase)
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047", _Address.ZipPlus4)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_Box_City_StateAbrv_Zip_With_Delimiters()
        Dim _Address As Address = _AddressTransformer.Parse("BOX 456; JEFFERSON OH 44047")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("PO BOX 456; JEFFERSON OH  44047", _Address.FullAddress, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Number))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Street))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Suffix))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.AreEqual("456", _Address.POBoxNumber, _testIgnoreCase)
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047", _Address.ZipPlus4)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_Box_City_StateAbrv_Zip_Without_Delimiters()
        Dim _Address As Address = _AddressTransformer.Parse("BOX 456 JEFFERSON OH 44047")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("PO BOX 456; JEFFERSON OH  44047", _Address.FullAddress, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Number))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Street))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Suffix))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.AreEqual("456", _Address.POBoxNumber, _testIgnoreCase)
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047", _Address.ZipPlus4)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_POBox_Zip_With_Delimiters()
        Dim _Address As Address = _AddressTransformer.Parse("PO BOX 456; 44047")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("PO BOX 456; JEFFERSON OH  44047", _Address.FullAddress, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Number))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Street))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Suffix))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.AreEqual("456", _Address.POBoxNumber, _testIgnoreCase)
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047", _Address.ZipPlus4)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_POBox_Only()
        Dim _Address As Address = _AddressTransformer.Parse("PO BOX 456A")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("PO BOX 456A", _Address.FullAddress, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Number))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Street))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Suffix))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.AreEqual("456A", _Address.POBoxNumber, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.City))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.County))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.State))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.ZipPlus4))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Country))
    End Sub

    <TestMethod()>
    Public Sub Testing_Number_Street_SuffixAbrv_POBox_City_StateAbrv_Zip_With_Delimiters()
        Dim _Address As Address = _AddressTransformer.Parse("123 MAIN ST; PO BOX 456; JEFFERSON OH 44047")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 MAIN ST; PO BOX 456; JEFFERSON OH  44047", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("MAIN", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.AreEqual("456", _Address.POBoxNumber, _testIgnoreCase)
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047", _Address.ZipPlus4)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_Number_Street_SuffixAbrv_POBox_City_StateAbrv_Zip_Without_Delimiters()
        Dim _Address As Address = _AddressTransformer.Parse("123 MAIN ST PO BOX 456 JEFFERSON OH 44047")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 MAIN ST; PO BOX 456; JEFFERSON OH  44047", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("MAIN", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.AreEqual("456", _Address.POBoxNumber, _testIgnoreCase)
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047", _Address.ZipPlus4)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_Number_Street_SuffixAbrv_POBox_City_StateAbrv_Zip_With_Delimiters_With_Comma()
        Dim _Address As Address = _AddressTransformer.Parse("123 MAIN ST; PO BOX 456; JEFFERSON, OH 44047")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 MAIN ST; PO BOX 456; JEFFERSON OH  44047", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("MAIN", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.AreEqual("456", _Address.POBoxNumber, _testIgnoreCase)
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047", _Address.ZipPlus4)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_Number_Street_SuffixAbrv_POBox_City_StateAbrv_Zip_Without_Delimiters_With_Comma()
        Dim _Address As Address = _AddressTransformer.Parse("123 MAIN ST PO BOX 456 JEFFERSON, OH 44047")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 MAIN ST; PO BOX 456; JEFFERSON OH  44047", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("MAIN", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.AreEqual("456", _Address.POBoxNumber, _testIgnoreCase)
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047", _Address.ZipPlus4)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_Number_Street_SuffixAbrv_POBox_Zip_Without_Delimiters_With_Comma()
        Dim _Address As Address = _AddressTransformer.Parse("123 MAIN ST PO BOX 456 44047")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 MAIN ST; PO BOX 456; JEFFERSON OH  44047", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("MAIN", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.AreEqual("456", _Address.POBoxNumber, _testIgnoreCase)
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047", _Address.ZipPlus4)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_Number_Street_SuffixAbrv()
        Dim _Address As Address = _AddressTransformer.Parse("123 MAIN ST")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 MAIN ST", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("MAIN", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.City))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.County))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.State))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.ZipPlus4))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Country))
    End Sub

    <TestMethod()>
    Public Sub Testing_Number_Street_SuffixAbrv_Unit()
        Dim _Address As Address = _AddressTransformer.Parse("123 MAIN ST APARTMENT 31")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 MAIN ST APT 31", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("MAIN", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.AreEqual("APT", _Address.SecondaryUnit, _testIgnoreCase)
        Assert.AreEqual("31", _Address.SecondaryNumber, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.City))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.County))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.State))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.ZipPlus4))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Country))
    End Sub

    <TestMethod()>
    Public Sub Testing_Street_SuffixAbrv()
        Dim _Address As Address = _AddressTransformer.Parse("MAIN ST")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("MAIN ST", _Address.FullAddress, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Number))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("MAIN", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.City))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.County))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.State))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.ZipPlus4))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Country))
    End Sub

    <TestMethod()>
    Public Sub Testing_Number_Street_Suffix()
        Dim _Address As Address = _AddressTransformer.Parse("123 MAIN STREET")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 MAIN ST", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("MAIN", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.City))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.County))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.State))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.ZipPlus4))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Country))
    End Sub

    <TestMethod()>
    Public Sub Testing_Number_Street_Suffix_Unit()
        Dim _Address As Address = _AddressTransformer.Parse("123 MAIN STREET apt 12A")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 MAIN ST APT 12A", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("MAIN", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.AreEqual("APT", _Address.SecondaryUnit, _testIgnoreCase)
        Assert.AreEqual("12A", _Address.SecondaryNumber, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.City))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.County))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.State))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.ZipPlus4))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Country))
    End Sub

    <TestMethod()>
    Public Sub Testing_Number_Street_Suffix_PostDirect()
        Dim _Address As Address = _AddressTransformer.Parse("123 MAIN STREET SW")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 MAIN ST SW", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("MAIN", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix, _testIgnoreCase)
        Assert.AreEqual("SW", _Address.PostDirectional, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.City))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.County))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.State))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.ZipPlus4))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Country))
    End Sub

    <TestMethod()>
    Public Sub Testing_Number_Street_Suffix_PostDirect_Unit()
        Dim _Address As Address = _AddressTransformer.Parse("123 MAIN STREET SW APT 2")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 MAIN ST SW APT 2", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("MAIN", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix, _testIgnoreCase)
        Assert.AreEqual("SW", _Address.PostDirectional, _testIgnoreCase)
        Assert.AreEqual("APT", _Address.SecondaryUnit, _testIgnoreCase)
        Assert.AreEqual("2", _Address.SecondaryNumber, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.City))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.County))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.State))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.ZipPlus4))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Country))
    End Sub

    <TestMethod()>
    Public Sub Testing_Number_Street()
        Dim _Address As Address = _AddressTransformer.Parse("123 MAIN")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 MAIN", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("MAIN", _Address.Street, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Suffix))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.City))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.County))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.State))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.ZipPlus4))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Country))
    End Sub

    <TestMethod()>
    Public Sub Testing_Number_Street_Unit()
        Dim _Address As Address = _AddressTransformer.Parse("123 MAIN APT 12A")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 MAIN APT 12A", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("MAIN", _Address.Street, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Suffix))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.AreEqual("APT", _Address.SecondaryUnit, _testIgnoreCase)
        Assert.AreEqual("12A", _Address.SecondaryNumber, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.City))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.County))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.State))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.ZipPlus4))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Country))
    End Sub

    <TestMethod()>
    Public Sub Testing_Street_With_Whitespace()
        Dim _Address As Address = _AddressTransformer.Parse("  7768 Anderson ave  ")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("7768 ANDERSON AVE", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("7768", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("ANDERSON", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("AVE", _Address.Suffix, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.City))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.County))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.State))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.ZipPlus4))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Country))
    End Sub

    <TestMethod()>
    Public Sub Testing_City_StateAbrv_Without_Whitespace_With_Delimiter()
        Dim _Address As Address = _AddressTransformer.Parse("CONNEAUT, OH")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("CONNEAUT OH  44030", _Address.FullAddress, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Number))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Street))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Suffix))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("CONNEAUT", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44030", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_City_StateAbrv_Zip_Without_Whitespace_With_Delimiter()
        Dim _Address As Address = _AddressTransformer.Parse("WARREN, OH 44484")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("WARREN OH  44484", _Address.FullAddress, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Number))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Street))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Suffix))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("WARREN", _Address.City, _testIgnoreCase)
        Assert.AreEqual("TRUMBULL", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44484", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_City_StateAbrv_Zip4_Without_Whitespace_With_Delimiter()
        Dim _Address As Address = _AddressTransformer.Parse("WARREN, OH 44484-1447")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("WARREN OH  44484-1447", _Address.FullAddress, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Number))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Street))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Suffix))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("WARREN", _Address.City, _testIgnoreCase)
        Assert.AreEqual("TRUMBULL", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44484-1447", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_City_StateAbrv_With_Whitespace()
        Dim _Address As Address = _AddressTransformer.Parse("  CONNEAUT OH  ")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("CONNEAUT OH  44030", _Address.FullAddress, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Number))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Street))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Suffix))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("CONNEAUT", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44030", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_City_StateAbrv_Zip_With_Whitespace()
        Dim _Address As Address = _AddressTransformer.Parse("  CONNEAUT OH 44030  ")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("CONNEAUT OH  44030", _Address.FullAddress, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Number))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Street))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Suffix))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("CONNEAUT", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44030", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_City_StateAbrv_Without_Whitespace()
        Dim _Address As Address = _AddressTransformer.Parse("CONNEAUT OH")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("CONNEAUT OH  44030", _Address.FullAddress, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Number))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Street))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Suffix))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("CONNEAUT", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44030", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_City_StateAbrv_Zip_Without_Whitespace()
        Dim _Address As Address = _AddressTransformer.Parse("WARREN OH 44484")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("WARREN OH  44484", _Address.FullAddress, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Number))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Street))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Suffix))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("WARREN", _Address.City, _testIgnoreCase)
        Assert.AreEqual("TRUMBULL", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44484", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_City_StateAbrv_Zip4_Without_Whitespace()
        Dim _Address As Address = _AddressTransformer.Parse("WARREN OH 44484-1447")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("WARREN OH  44484-1447", _Address.FullAddress, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Number))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Street))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Suffix))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("WARREN", _Address.City, _testIgnoreCase)
        Assert.AreEqual("TRUMBULL", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44484-1447", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_Zip_Without_Whitespace()
        Dim _Address As Address = _AddressTransformer.Parse("44484")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("WARREN OH  44484", _Address.FullAddress, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Number))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Street))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Suffix))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("Warren", _Address.City, _testIgnoreCase)
        Assert.AreEqual("Trumbull", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44484", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_Zip_With_Whitespace()
        Dim _Address As Address = _AddressTransformer.Parse("  44484  ")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("WARREN OH  44484", _Address.FullAddress, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Number))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Street))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Suffix))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("Warren", _Address.City, _testIgnoreCase)
        Assert.AreEqual("Trumbull", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44484", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_Zip4_Without_Whitespace()
        Dim _Address As Address = _AddressTransformer.Parse("44484-1447")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("WARREN OH  44484-1447", _Address.FullAddress, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Number))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Street))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Suffix))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("Warren", _Address.City, _testIgnoreCase)
        Assert.AreEqual("Trumbull", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44484-1447", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_Zip4_With_Whitespace()
        Dim _Address As Address = _AddressTransformer.Parse("  44484-1447  ")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("WARREN OH  44484-1447", _Address.FullAddress, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Number))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Street))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Suffix))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("Warren", _Address.City, _testIgnoreCase)
        Assert.AreEqual("Trumbull", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44484-1447", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_Number_PreDirectAbrv_Street_SuffixAbrv_PostDirectAbrv()
        Dim _Address As Address = _AddressTransformer.Parse("123 E MAIN ST S")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 E MAIN ST S", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.AreEqual("E", _Address.PreDirectional, _testIgnoreCase)
        Assert.AreEqual("MAIN", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix, _testIgnoreCase)
        Assert.AreEqual("S", _Address.PostDirectional, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.City))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.County))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.State))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.ZipPlus4))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Country))
    End Sub

    <TestMethod()>
    Public Sub Testing_Number_PreDirect_Street_Suffix_PostDirect()
        Dim _Address As Address = _AddressTransformer.Parse("123 EAST MAIN STREET SOUTH")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 E MAIN ST S", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.AreEqual("E", _Address.PreDirectional, _testIgnoreCase)
        Assert.AreEqual("MAIN", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix, _testIgnoreCase)
        Assert.AreEqual("S", _Address.PostDirectional, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.City))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.County))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.State))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.ZipPlus4))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Country))
    End Sub

    <TestMethod()>
    Public Sub Testing_Number_PreDirectAbrv_Street_PostDirectAbrv()
        Dim _Address As Address = _AddressTransformer.Parse("123 E MAIN S")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 E MAIN S", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.AreEqual("E", _Address.PreDirectional, _testIgnoreCase)
        Assert.AreEqual("MAIN", _Address.Street, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Suffix))
        Assert.AreEqual("S", _Address.PostDirectional, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.City))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.County))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.State))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.ZipPlus4))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Country))
    End Sub

    <TestMethod()>
    Public Sub Testing_PreDirectAbrv_Street_SuffixAbrv_PostDirectAbrv()
        Dim _Address As Address = _AddressTransformer.Parse("E MAIN ST S")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("E MAIN ST S", _Address.FullAddress, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Number))
        Assert.AreEqual("E", _Address.PreDirectional, _testIgnoreCase)
        Assert.AreEqual("MAIN", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix, _testIgnoreCase)
        Assert.AreEqual("S", _Address.PostDirectional, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.City))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.County))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.State))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.ZipPlus4))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Country))
    End Sub

    <TestMethod()>
    Public Sub Testing_PreDirectAbrv_Street_PostDirectAbrv()
        Dim _Address As Address = _AddressTransformer.Parse("E MAIN S")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("E MAIN S", _Address.FullAddress, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Number))
        Assert.AreEqual("E", _Address.PreDirectional, _testIgnoreCase)
        Assert.AreEqual("MAIN", _Address.Street, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Suffix))
        Assert.AreEqual("S", _Address.PostDirectional, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.City))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.County))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.State))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.ZipPlus4))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Country))
    End Sub

    <TestMethod()>
    Public Sub Testing_Number_StreetMultiName_SuffixAbrv()
        Dim _Address As Address = _AddressTransformer.Parse("123 MARTIN LUTHER KING JR AVE")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 MARTIN LUTHER KING JR AVE", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("MARTIN LUTHER KING JR", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("AVE", _Address.Suffix, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.City))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.County))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.State))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.ZipPlus4))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Country))
    End Sub

    <TestMethod()>
    Public Sub Testing_StreetMultiName_SuffixAbrv()
        Dim _Address As Address = _AddressTransformer.Parse("MARTIN LUTHER KING JR AVE")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("MARTIN LUTHER KING JR AVE", _Address.FullAddress, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Number))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("MARTIN LUTHER KING JR", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("AVE", _Address.Suffix, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.City))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.County))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.State))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.ZipPlus4))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Country))
    End Sub

    <TestMethod()>
    Public Sub Testing_Number_StreetMultiName_Suffix()
        Dim _Address As Address = _AddressTransformer.Parse("123 MARTIN LUTHER KING JR AVENUE")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 MARTIN LUTHER KING JR AVE", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("MARTIN LUTHER KING JR", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("AVE", _Address.Suffix, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.City))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.County))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.State))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.ZipPlus4))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Country))
    End Sub

    <TestMethod()>
    Public Sub Testing_Number_StreetMultiName_Suffix_PostDirect()
        Dim _Address As Address = _AddressTransformer.Parse("123 MARTIN LUTHER KING JR AVE SW")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 MARTIN LUTHER KING JR AVE SW", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("MARTIN LUTHER KING JR", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("AVE", _Address.Suffix, _testIgnoreCase)
        Assert.AreEqual("SW", _Address.PostDirectional, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.City))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.County))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.State))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.ZipPlus4))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Country))
    End Sub

    <TestMethod()>
    Public Sub Testing_Number_PreDirectAbrv_StreetMultiName_SuffixAbrv_PostDirectAbrv()
        Dim _Address As Address = _AddressTransformer.Parse("123 E MARTIN LUTHER KING JR AVE S")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 E MARTIN LUTHER KING JR AVE S", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.AreEqual("E", _Address.PreDirectional, _testIgnoreCase)
        Assert.AreEqual("MARTIN LUTHER KING JR", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("AVE", _Address.Suffix, _testIgnoreCase)
        Assert.AreEqual("S", _Address.PostDirectional, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.City))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.County))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.State))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.ZipPlus4))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Country))
    End Sub

    <TestMethod()>
    Public Sub Testing_Number_PreDirect_StreetMultiName_Suffix_PostDirect()
        Dim _Address As Address = _AddressTransformer.Parse("123 EAST MARTIN LUTHER KING JR AVENUE SOUTH")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 E MARTIN LUTHER KING JR AVE S", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.AreEqual("E", _Address.PreDirectional, _testIgnoreCase)
        Assert.AreEqual("MARTIN LUTHER KING JR", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("AVE", _Address.Suffix, _testIgnoreCase)
        Assert.AreEqual("S", _Address.PostDirectional, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.City))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.County))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.State))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.ZipPlus4))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Country))
    End Sub

    <TestMethod()>
    Public Sub Testing_Number_PreDirectAbrv_StreetMultiName_PostDirectAbrv()
        Dim _Address As Address = _AddressTransformer.Parse("123 E MARTIN LUTHER KING JR S")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 E MARTIN LUTHER KING JR S", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.AreEqual("E", _Address.PreDirectional, _testIgnoreCase)
        Assert.AreEqual("MARTIN LUTHER KING JR", _Address.Street, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Suffix))
        Assert.AreEqual("S", _Address.PostDirectional, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.City))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.County))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.State))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.ZipPlus4))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Country))
    End Sub

    <TestMethod()>
    Public Sub Testing_PreDirectAbrv_StreetMultiName_SuffixAbrv_PostDirectAbrv()
        Dim _Address As Address = _AddressTransformer.Parse("E MARTIN LUTHER KING JR AVE S")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("E MARTIN LUTHER KING JR AVE S", _Address.FullAddress, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Number))
        Assert.AreEqual("E", _Address.PreDirectional, _testIgnoreCase)
        Assert.AreEqual("MARTIN LUTHER KING JR", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("AVE", _Address.Suffix, _testIgnoreCase)
        Assert.AreEqual("S", _Address.PostDirectional, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.City))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.County))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.State))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.ZipPlus4))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Country))
    End Sub

    <TestMethod()>
    Public Sub Testing_Number_StreetMultiName()
        Dim _Address As Address = _AddressTransformer.Parse("123 MARTIN LUTHER KING JR")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 MARTIN LUTHER KING JR", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("MARTIN LUTHER KING JR", _Address.Street, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Suffix))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.City))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.County))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.State))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.ZipPlus4))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Country))
    End Sub

    <TestMethod()>
    Public Sub Testing_Number_Street_SuffixAbrv_Zip_With_Delimiter()
        Dim _Address As Address = _AddressTransformer.Parse("123 MAIN ST; 44047")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 MAIN ST; JEFFERSON OH  44047", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("MAIN", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_Number_Street_SuffixAbrv_Zip_Without_Delimiter()
        Dim _Address As Address = _AddressTransformer.Parse("123 MAIN ST 44047")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 MAIN ST; JEFFERSON OH  44047", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("MAIN", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_With_Ranged_Unit_Attached_To_Number_1()
        Dim _Address As Address = _AddressTransformer.Parse("403D BERRYFIELD LANE CHESAPEAKE VA 23324")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("403 BERRYFIELD LN APT D; CHESAPEAKE VA  23324", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("403", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("BERRYFIELD", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("LN", _Address.Suffix)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.AreEqual("APT", _Address.SecondaryUnit, _testIgnoreCase)
        Assert.AreEqual("D", _Address.SecondaryNumber, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("CHESAPEAKE", _Address.City, _testIgnoreCase)
        Assert.AreEqual("CHESAPEAKE CITY", _Address.County, _testIgnoreCase)
        Assert.AreEqual("VA", _Address.State, _testIgnoreCase)
        Assert.AreEqual("23324", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_With_Ranged_Unit_Attached_To_Number_2()
        Dim _Address As Address = _AddressTransformer.Parse("123A MAIN ST; JEFFERSON OH 44047")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 MAIN ST APT A; JEFFERSON OH  44047", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("MAIN", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.AreEqual("APT", _Address.SecondaryUnit, _testIgnoreCase)
        Assert.AreEqual("A", _Address.SecondaryNumber, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_With_Ranged_Unit_Attached_To_Number_3()
        Dim _Address As Address = _AddressTransformer.Parse("123-1A MAIN ST; JEFFERSON OH 44047")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 MAIN ST APT 1A; JEFFERSON OH  44047", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("MAIN", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.AreEqual("APT", _Address.SecondaryUnit, _testIgnoreCase)
        Assert.AreEqual("1A", _Address.SecondaryNumber, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_RR_With_Delimiter()
        Dim _Address As Address = _AddressTransformer.Parse("RR 4 BOX 123; JEFFERSON OH 44047-1447")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("RR 4 BOX 123; JEFFERSON OH  44047-1447", _Address.FullAddress, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Number))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("RR 4 BOX 123", _Address.Street, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Suffix))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047-1447", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_RR_Without_Delimiter()
        Dim _Address As Address = _AddressTransformer.Parse("RR 4 BOX 123 JEFFERSON OH 44047")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("RR 4 BOX 123; JEFFERSON OH  44047", _Address.FullAddress, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Number))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("RR 4 BOX 123", _Address.Street, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Suffix))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_RuralRoute_With_Delimiter()
        Dim _Address As Address = _AddressTransformer.Parse("RURAL ROUTE 4 BOX 123; JEFFERSON OH 44047")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("RURAL ROUTE 4 BOX 123; JEFFERSON OH  44047", _Address.FullAddress, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Number))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("RURAL ROUTE 4 BOX 123", _Address.Street, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Suffix))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_Rural_With_Delimiter()
        Dim _Address As Address = _AddressTransformer.Parse("RURAL 4 BOX 123; JEFFERSON OH 44047")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("RURAL 4 BOX 123; JEFFERSON OH  44047", _Address.FullAddress, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Number))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("RURAL 4 BOX 123", _Address.Street, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Suffix))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_RRPound_With_Delimiter()
        Dim _Address As Address = _AddressTransformer.Parse("RR 4 BOX #123; JEFFERSON OH 44047")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("RR 4 BOX #123; JEFFERSON OH  44047", _Address.FullAddress, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Number))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("RR 4 BOX #123", _Address.Street, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Suffix))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_RuralRoutePound_With_Delimiter()
        Dim _Address As Address = _AddressTransformer.Parse("RURAL ROUTE 4 BOX #123; JEFFERSON OH 44047")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("RURAL ROUTE 4 BOX #123; JEFFERSON OH  44047", _Address.FullAddress, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Number))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("RURAL ROUTE 4 BOX #123", _Address.Street, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Suffix))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_RuralPound_With_Delimiter()
        Dim _Address As Address = _AddressTransformer.Parse("RURAL 4 BOX #123; JEFFERSON OH 44047")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("RURAL 4 BOX #123; JEFFERSON OH  44047", _Address.FullAddress, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Number))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("RURAL 4 BOX #123", _Address.Street, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Suffix))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("JEFFERSON", _Address.City, _testIgnoreCase)
        Assert.AreEqual("ASHTABULA", _Address.County, _testIgnoreCase)
        Assert.AreEqual("OH", _Address.State, _testIgnoreCase)
        Assert.AreEqual("44047", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("UNITED STATES", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_Canadian_1()
        Dim _Address As Address = _AddressTransformer.Parse("10-123 1/2 MAIN ST SE; MONTREAL  QC H3Z 2Y7; CANADA")
        Assert.AreNotEqual(Nothing, _Address)
        'Debug.Print("10-123 1/2 MAIN ST SE; MONTREAL QC  H3Z 2Y7; CANADA")
        'Debug.Print(_Address.FullAddress)
        Assert.AreEqual("10-123 1/2 MAIN ST SE; MONTREAL QC  H3Z 2Y7; CANADA", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("10-123 1/2", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("MAIN", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix, _testIgnoreCase)
        Assert.AreEqual("SE", _Address.PostDirectional, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("MONTREAL", _Address.City, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.County))
        Assert.AreEqual("QC", _Address.State, _testIgnoreCase)
        Assert.AreEqual("H3Z 2Y7", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("CANADA", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_Canadian_2()
        Dim _Address As Address = _AddressTransformer.Parse("10-123 1/2 MAIN ST SE MONTREAL  QC H3Z 2Y7 CA")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("10-123 1/2 MAIN ST SE; MONTREAL QC  H3Z 2Y7; CANADA", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("10-123 1/2", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("MAIN", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix, _testIgnoreCase)
        Assert.AreEqual("SE", _Address.PostDirectional, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("MONTREAL", _Address.City, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.County))
        Assert.AreEqual("QC", _Address.State, _testIgnoreCase)
        Assert.AreEqual("H3Z 2Y7", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("CANADA", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_Canadian_3()
        Dim _Address As Address = _AddressTransformer.Parse("123 MAIN ST; MILLARVILLE AB  T0L 1K0; CANADA")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 MAIN ST; MILLARVILLE AB  T0L 1K0; CANADA", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("MAIN", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("MILLARVILLE", _Address.City, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.County))
        Assert.AreEqual("AB", _Address.State, _testIgnoreCase)
        Assert.AreEqual("T0L 1K0", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("CANADA", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_Canadian_4()
        Dim _Address As Address = _AddressTransformer.Parse("123 MAIN ST MILLARVILLE AB  T0L 1K0 CANADA")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 MAIN ST; MILLARVILLE AB  T0L 1K0; CANADA", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("MAIN", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PostDirectional))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryUnit))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.SecondaryNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.AreEqual("MILLARVILLE", _Address.City, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.County))
        Assert.AreEqual("AB", _Address.State, _testIgnoreCase)
        Assert.AreEqual("T0L 1K0", _Address.ZipPlus4, _testIgnoreCase)
        Assert.AreEqual("CANADA", _Address.Country, _testIgnoreCase)
    End Sub

    <TestMethod()>
    Public Sub Testing_Secondary_Unit_Numbers_1()
        Dim _Address As Address = _AddressTransformer.Parse("123 MAIN STREET SW APT 2")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 MAIN ST SW APT 2", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("MAIN", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix, _testIgnoreCase)
        Assert.AreEqual("SW", _Address.PostDirectional, _testIgnoreCase)
        Assert.AreEqual("APT", _Address.SecondaryUnit, _testIgnoreCase)
        Assert.AreEqual("2", _Address.SecondaryNumber, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.City))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.County))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.State))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.ZipPlus4))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Country))
    End Sub

    <TestMethod()>
    Public Sub Testing_Secondary_Unit_Numbers_2()
        Dim _Address As Address = _AddressTransformer.Parse("123 MAIN STREET SW APT 12A")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 MAIN ST SW APT 12A", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("MAIN", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix, _testIgnoreCase)
        Assert.AreEqual("SW", _Address.PostDirectional, _testIgnoreCase)
        Assert.AreEqual("APT", _Address.SecondaryUnit, _testIgnoreCase)
        Assert.AreEqual("12A", _Address.SecondaryNumber, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.City))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.County))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.State))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.ZipPlus4))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Country))
    End Sub

    <TestMethod()>
    Public Sub Testing_Secondary_Unit_Numbers_3()
        Dim _Address As Address = _AddressTransformer.Parse("123 MAIN STREET SW # 12A")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 MAIN ST SW APT 12A", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("MAIN", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix, _testIgnoreCase)
        Assert.AreEqual("SW", _Address.PostDirectional, _testIgnoreCase)
        Assert.AreEqual("APT", _Address.SecondaryUnit, _testIgnoreCase)
        Assert.AreEqual("12A", _Address.SecondaryNumber, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.City))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.County))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.State))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.ZipPlus4))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Country))
    End Sub

    <TestMethod()>
    Public Sub Testing_Secondary_Unit_Numbers_4()
        Dim _Address As Address = _AddressTransformer.Parse("123 MAIN STREET SW #12A")
        Assert.AreNotEqual(Nothing, _Address)
        Assert.AreEqual("123 MAIN ST SW APT 12A", _Address.FullAddress, _testIgnoreCase)
        Assert.AreEqual("123", _Address.Number, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.PreDirectional))
        Assert.AreEqual("MAIN", _Address.Street, _testIgnoreCase)
        Assert.AreEqual("ST", _Address.Suffix, _testIgnoreCase)
        Assert.AreEqual("SW", _Address.PostDirectional, _testIgnoreCase)
        Assert.AreEqual("APT", _Address.SecondaryUnit, _testIgnoreCase)
        Assert.AreEqual("12A", _Address.SecondaryNumber, _testIgnoreCase)
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.POBoxNumber))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.City))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.County))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.State))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.ZipPlus4))
        Assert.IsTrue(String.IsNullOrWhiteSpace(_Address.Country))
    End Sub



End Class